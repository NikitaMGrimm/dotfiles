#!/usr/bin/env python3

import sys
import subprocess
import shlex
import shutil
import argparse

parser = argparse.ArgumentParser(description='Find common lines between the output of two scripts')
parser.add_argument('script1', help='the first script')
parser.add_argument('script2', help='the second script')
parser.add_argument('--shell', default=None, help='the shell command to use (default: zsh if available, otherwise bash)')

args = parser.parse_args()

# Determine the default shell to use
zsh_path = shutil.which('zsh')
bash_path = shutil.which('bash')

if zsh_path:
    default_shell = f'{zsh_path} -c'
else:
    default_shell = f'{bash_path} -c'

# Use the default shell if no command is specified
if args.shell is None:
    command = default_shell
else:
    command = args.shell

try:
    # Split the command into separate arguments
    cmd_args = shlex.split(command)

    # Run the first script and capture its output
    proc1 = subprocess.Popen(cmd_args + [args.script1], stdout=subprocess.PIPE)
    output1 = [line.decode().strip() for line in proc1.stdout]

    # Run the second script and capture its output
    proc2 = subprocess.Popen(cmd_args + [args.script2], stdout=subprocess.PIPE)
    output2 = [line.decode().strip() for line in proc2.stdout]

    # Find the common lines in the output
    common_lines = set(output1).intersection(output2)

    # Print the common lines in the order they appear in script1
    for line in output1:
        if line.strip() in common_lines:
            print(line.strip())

except OSError as e:
    print("Error: {}".format(e))
    sys.exit(1)

