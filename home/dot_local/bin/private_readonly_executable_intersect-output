#!/usr/bin/env python3

import argparse
import os
import subprocess
import shutil

parser = argparse.ArgumentParser(description='Find common lines between the output of two scripts')
parser.add_argument('script1', help='the first script')
parser.add_argument('script2', help='the second script')
parser.add_argument('--shell', default=os.getenv('SHELL', shutil.which('zsh') or 'bash'), help='the shell command to use (default: $SHELL if set, otherwise zsh if available, otherwise bash)')
parser.add_argument('--case', action='store_true', help='make the comparison case-insensitive')

args = parser.parse_args()

try:
    # Run the first script and capture its output
    proc1 = subprocess.run([args.shell, '-c', args.script1], capture_output=True, text=True)
    if proc1.returncode != 0:
        print(f"Error running script1: {proc1.stderr.strip()}")
        exit(1)
    proc1out = proc1.stdout.strip().splitlines()
    output1 = set(proc1out)

    # Run the second script and capture its output
    proc2 = subprocess.run([args.shell, '-c', args.script2], capture_output=True, text=True)
    if proc2.returncode != 0:
        print(f"Error running script2: {proc2.stderr.strip()}")
        exit(1)
    output2 = set(proc2.stdout.strip().splitlines())

    # Find the common lines in the output
    if args.case:
        common_lines = {line.lower() for line in output1}.intersection({line.lower() for line in output2})
    else:
        common_lines = output1.intersection(output2)

    output = []
    # Print the common lines in the order they appear in script1
    for line in proc1out:
        if line in common_lines and line not in output:
            output.append(line)
            print(line)

except subprocess.CalledProcessError as e:
    print(f"Error: {e}")
    exit(1)

